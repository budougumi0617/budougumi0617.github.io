<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on My External Storage</title>
    <link>https://budougumi0617.github.io/categories/github/</link>
    <description>Recent content in Github on My External Storage</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <managingEditor>budougumi[at]gmail.com (budougumi0617)</managingEditor>
    <webMaster>budougumi[at]gmail.com (budougumi0617)</webMaster>
    <lastBuildDate>Tue, 20 Sep 2022 09:36:26 +0900</lastBuildDate>
    <atom:link href="https://budougumi0617.github.io/categories/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub CLIを使って任意の条件のissueを一括closeする（一括操作する）</title>
      <link>https://budougumi0617.github.io/2022/09/20/closed-stale-github-issue-by-manual/</link>
      <pubDate>Tue, 20 Sep 2022 09:36:26 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2022/09/20/closed-stale-github-issue-by-manual/</guid>
      <description>&lt;p&gt;業務のタスク管理としてGitHub Project（Issue）を使っている。&lt;br&gt;&#xA;Issueの棚卸しとして、古いIssueを一括closeしたときの操作をまとめる。&lt;br&gt;&#xA;&#xA;&lt;a href=&#34;https://docs.github.com/ja/graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub GraphQL API v4&lt;/a&gt;を用いてやろうと思ったが、GitHub CLIを利用する方法が一番カンタンだった。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://cli.github.com/&#34; data-iframely-url=&#34;//iframely.net/Yqle0ig?card=small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//iframely.net/embed.js&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>GitHub ActionsでER図を自動生成する話とNew Relicでデプロイ頻度をグラフにする話を寄稿した</title>
      <link>https://budougumi0617.github.io/2021/12/12/publish_base_blog/</link>
      <pubDate>Sun, 12 Dec 2021 10:11:36 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2021/12/12/publish_base_blog/</guid>
      <description>&lt;p&gt;会社のブログに寄稿したのでそちらには書かなかった個人的な感想と一緒にメモ。&lt;/p&gt;&#xA;&lt;div style=&#34;left: 0; width: 100%; height: 190px; position: relative;&#34;&gt;&lt;iframe src=&#34;https://hatenablog-parts.com/embed?url=https%3A%2F%2Fdevblog.thebase.in%2Fentry%2Fauto_generated_er_graph_by_tbls_and_github_actions&#34; style=&#34;top: 0; left: 0; width: 100%; height: 100%; position: absolute; border: 0;&#34; allowfullscreen scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;div style=&#34;left: 0; width: 100%; height: 190px; position: relative;&#34;&gt;&lt;iframe src=&#34;https://hatenablog-parts.com/embed?url=https%3A%2F%2Fdevblog.thebase.in%2Fentry%2Fdevops_key_metrics_on_newrelic&#34; style=&#34;top: 0; left: 0; width: 100%; height: 100%; position: absolute; border: 0;&#34; allowfullscreen scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>GitHub API v3でPrivateリポジトリのPull Requestのdiffを取得する</title>
      <link>https://budougumi0617.github.io/2021/05/31/cannot_get_pull_request_diff/</link>
      <pubDate>Mon, 31 May 2021 09:30:50 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2021/05/31/cannot_get_pull_request_diff/</guid>
      <description>&lt;p&gt;GitHub API v3でPull Requestの情報をごにょごにょしようとしたらハマったのでメモ。&lt;br&gt;&#xA;GitHub API v3のPull RequestのJSONに含まれる&lt;code&gt;diff_url&lt;/code&gt;は役に立たない。&lt;code&gt;Accept&lt;/code&gt;ヘッダーでレスポンスが変化する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>テストコードなどは除外してからPRのサイズを警告するActionsを作った</title>
      <link>https://budougumi0617.github.io/2021/05/07/reelase_action-pr-size-checker/</link>
      <pubDate>Fri, 07 May 2021 09:30:11 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2021/05/07/reelase_action-pr-size-checker/</guid>
      <description>&lt;p&gt;Pull Request（PR）の追加行数を計測して、指定行数以上だった場合はPRにコメントするGitHub Actionsをつくった。&lt;br&gt;&#xA;フィルターパターンを設定しておけば、テストコードや設定ファイルの追加行数を無視する。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://github.com/budougumi0617/action-pr-size-checker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/budougumi0617/action-pr-size-checker&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/marketplace/actions/action-pr-size-checker&#34; data-iframely-url=&#34;//cdn.iframe.ly/2rVGShx&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>reviewdogを使ったGitHub Actionsの作り方</title>
      <link>https://budougumi0617.github.io/2021/02/16/how_to_create_reviewdog_actions/</link>
      <pubDate>Tue, 16 Feb 2021 09:00:00 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2021/02/16/how_to_create_reviewdog_actions/</guid>
      <description>&lt;p&gt;reviewdogを使ったGitHub Actionsを作る過程をメモしておく。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://budougumi0617.github.io/2021/02/07/release_action_newrelic_segment_lint/&#34;&gt;[Go] 新規追加した関数にNew RelicのSegmentを入れ忘れていたら警告するGitHub Actionsを作った&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>[Go] 新規追加した関数にNew RelicのSegmentを入れ忘れていたら警告するGitHub Actionsを作った</title>
      <link>https://budougumi0617.github.io/2021/02/07/release_action_newrelic_segment_lint/</link>
      <pubDate>Sun, 07 Feb 2021 00:19:47 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2021/02/07/release_action_newrelic_segment_lint/</guid>
      <description>&lt;p&gt;Goのアプリで新規関数を含むPull Requset（PR）を作ったとき、New RelicのSegmentをいれてなかったら怒るreviewdogのGitHub Actionsを作った。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/budougumi0617/action-newrelic-segment-lint&#34; data-iframely-url=&#34;//cdn.iframe.ly/aLlaE2N?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ifelseやswitch文のようにGitHub Actionsのステップの実行を制御したい</title>
      <link>https://budougumi0617.github.io/2020/11/21/execute_steps_with_iflese_in_github_actions/</link>
      <pubDate>Sat, 21 Nov 2020 13:15:23 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2020/11/21/execute_steps_with_iflese_in_github_actions/</guid>
      <description>&lt;p&gt;GitHub Actions上でこんな感じにステップの実行を制御する方法をまとめておく。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if condition1 {&#xA;  step1 実行&#xA;} else if condition2 {&#xA;  step2 実行&#xA;} else {&#xA;  step3 実行&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>GitHub Actions上でGCP Datastoreエミュレータを使ったテストを実行する</title>
      <link>https://budougumi0617.github.io/2020/05/01/use-datastore-emulator-on-github-actions/</link>
      <pubDate>Fri, 01 May 2020 08:42:01 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2020/05/01/use-datastore-emulator-on-github-actions/</guid>
      <description>&lt;p&gt;GCP Datastoreを扱うコードをGitHub Actions上でテストする方法をまとめた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Go] GitHub Actionsでキャッシュ機能を使う #github</title>
      <link>https://budougumi0617.github.io/2019/11/03/use-cache-in-github-actions/</link>
      <pubDate>Sun, 03 Nov 2019 18:04:33 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2019/11/03/use-cache-in-github-actions/</guid>
      <description>&lt;p&gt;GitHub Actionsで待望のキャッシュ機能が使えるようになった。&lt;br&gt;&#xA;Windowsコンテナでジョブを実行していると少しハマる感じだったが、自分のGoのリポジトリのGitHub Actionsでキャッシュを使えるようになった。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/actions/cache&#34; data-iframely-url=&#34;//cdn.iframe.ly/vNWhS6o&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>GitHub Actionsで特定のブランチのときのみワークフローを実行する #github #actions #ci</title>
      <link>https://budougumi0617.github.io/2019/01/11/filter-branch-in-github-actions/</link>
      <pubDate>Fri, 11 Jan 2019 07:17:52 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2019/01/11/filter-branch-in-github-actions/</guid>
      <description>&lt;p&gt;2019/01現在Public BataのGitHub ActionsでCircleCIの&lt;code&gt;branches only&lt;/code&gt;相当の処理を出来ないか調査した。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub Actions&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/features/actions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/features/actions/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://budougumi0617.github.io/2019/01/11-failed.png&#34; alt=&#34;Failed&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
