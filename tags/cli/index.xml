<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cli on My External Storage</title>
    <link>https://budougumi0617.github.io/tags/cli/</link>
    <description>Recent content in Cli on My External Storage</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 20 Sep 2022 09:36:26 +0900</lastBuildDate>
    <atom:link href="https://budougumi0617.github.io/tags/cli/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub CLIを使って任意の条件のissueを一括closeする（一括操作する）</title>
      <link>https://budougumi0617.github.io/2022/09/20/closed-stale-github-issue-by-manual/</link>
      <pubDate>Tue, 20 Sep 2022 09:36:26 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2022/09/20/closed-stale-github-issue-by-manual/</guid>
      <description>&lt;p&gt;業務のタスク管理としてGitHub Project（Issue）を使っている。&lt;br&gt;&#xA;Issueの棚卸しとして、古いIssueを一括closeしたときの操作をまとめる。&lt;br&gt;&#xA;&#xA;&lt;a href=&#34;https://docs.github.com/ja/graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub GraphQL API v4&lt;/a&gt;を用いてやろうと思ったが、GitHub CLIを利用する方法が一番カンタンだった。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://cli.github.com/&#34; data-iframely-url=&#34;//iframely.net/Yqle0ig?card=small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//iframely.net/embed.js&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Goでプログラムを終了するときのお作法</title>
      <link>https://budougumi0617.github.io/2021/06/30/which_termination_method_should_choose_on_go/</link>
      <pubDate>Wed, 30 Jun 2021 17:57:32 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2021/06/30/which_termination_method_should_choose_on_go/</guid>
      <description>&lt;p&gt;Goにはいくつかプログラムを終了させる手段が存在する。&lt;br&gt;&#xA;プログラムを終了させるときにどれを選べばいいか調べてみた。結論から言うと&lt;code&gt;main&lt;/code&gt;関数内で&lt;code&gt;defer&lt;/code&gt;を使わず&lt;code&gt;os.Exit&lt;/code&gt;関数を呼ぶ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Goらしさとは何なのか考える</title>
      <link>https://budougumi0617.github.io/2020/10/23/think_go_way/</link>
      <pubDate>Fri, 23 Oct 2020 09:50:01 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2020/10/23/think_go_way/</guid>
      <description>&lt;p&gt;「Goらしさ」や「Goに入ってはGoに従え」というけれど、「Goらしい」って一体なんだろう？と考えてみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>goreleaserとGitHub Actionsを使えばGoのCLIはgit tagをpushするだけでGitHubとHomeBrewに自動リリースできる</title>
      <link>https://budougumi0617.github.io/2020/10/07/auto_release_by_goreleaser/</link>
      <pubDate>Wed, 07 Oct 2020 12:16:30 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2020/10/07/auto_release_by_goreleaser/</guid>
      <description>&lt;p&gt;goreleaserを使うとGo製のCLIのGitHubのリリースページの更新とHomeBrew Tap用リリースも簡単に行える。&lt;br&gt;&#xA;さらにGitHub Actionsを使えばYAMLを2ファイル追加するだけでgit tagに合わせて全自動リリースが可能になる。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser-action&#34; data-iframely-url=&#34;//cdn.iframe.ly/N4iA3Tu?iframe=card-small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>LeetCodeをローカルで効率よく解くためのGo専用CLIを作った</title>
      <link>https://budougumi0617.github.io/2020/10/06/release_leetgode/</link>
      <pubDate>Tue, 06 Oct 2020 10:42:02 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2020/10/06/release_leetgode/</guid>
      <description>&lt;p&gt;LeetCodeの問題をGoを使って解いている。&lt;br&gt;&#xA;テストファーストで解くためにテストコードも自動生成するCLIを作った。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/budougumi0617/leetgode&#34; data-iframely-url=&#34;//cdn.iframe.ly/oK5Ai7E&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//cdn.iframe.ly/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>正規表現の文字クラス（角括弧[]）にハイフンを含みたいときは、ハイフンを最初または最後に書く</title>
      <link>https://budougumi0617.github.io/2019/05/04/use-hyphens-in-regular-expression-name-classes/</link>
      <pubDate>Sat, 04 May 2019 07:41:57 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2019/05/04/use-hyphens-in-regular-expression-name-classes/</guid>
      <description>&lt;p&gt;正規表現をいじっていたらハマったのでメモ。&lt;/p&gt;&#xA;&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=github.io-22&amp;language=ja_JP&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4873113598&amp;linkId=59ba8fe3cd580af67049dcacf9c16e40&#34;&gt;&lt;/iframe&gt;</description>
    </item>
  </channel>
</rss>
