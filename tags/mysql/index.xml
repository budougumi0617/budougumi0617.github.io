<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on My External Storage</title>
    <link>https://budougumi0617.github.io/tags/mysql/</link>
    <description>Recent content in Mysql on My External Storage</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <managingEditor>budougumi[at]gmail.com (budougumi0617)</managingEditor>
    <webMaster>budougumi[at]gmail.com (budougumi0617)</webMaster>
    <lastBuildDate>Sun, 31 Mar 2019 08:35:30 +0900</lastBuildDate>
    <atom:link href="https://budougumi0617.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Go] MySQLからScanしたときunsupported Scan, storing driver.Value type []uint8 into type *time.Timeと出てパースに失敗する</title>
      <link>https://budougumi0617.github.io/2019/03/31/go_db_unsupported_scan_storing_driver_value_type_uint8_into_type_time_time/</link>
      <pubDate>Sun, 31 Mar 2019 08:35:30 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2019/03/31/go_db_unsupported_scan_storing_driver_value_type_uint8_into_type_time_time/</guid>
      <description>&lt;p&gt;GoでDBを操作するコードを書いている。&lt;code&gt;jmoiron/sqlx&lt;/code&gt;パッケージを使ってMySQLサーバ内のDBをを操作しようとして表題のエラーに遭遇した。&lt;br&gt;&#xA;MySQLサーバとの接続パラメータを変えることでうまくいったので解決方法をメモしておく。&lt;/p&gt;</description>
    </item>
    <item>
      <title>クエリの練習用に20以上のテーブルと大量データを事前投入したMySQLイメージをDocker Hubで公開する</title>
      <link>https://budougumi0617.github.io/2019/03/20/publish-docker-image-for-sql-training/</link>
      <pubDate>Wed, 20 Mar 2019 19:43:17 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2019/03/20/publish-docker-image-for-sql-training/</guid>
      <description>&lt;p&gt;以前にDockerを使って使い捨てのMySQLを起動する方法を紹介した。今回はMySQL公式のプリセットデータを使ったMySQLコンテナを作成する。&#xA;また、ローカルから簡単に操作するMakefileも作成した。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;budougumi0617/mysql-sakila&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://cloud.docker.com/repository/docker/budougumi0617/mysql-sakila&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cloud.docker.com/repository/docker/budougumi0617/mysql-sakila&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/budougumi0617/til/blob/master/sql/Makefile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/budougumi0617/til/blob/master/sql/Makefile&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Dockerで使い捨てのMySQL環境を用意する。事前データを投入して起動する。</title>
      <link>https://budougumi0617.github.io/2018/05/20/create-instant-mysql-by-docker/</link>
      <pubDate>Sun, 20 May 2018 12:47:20 +0900</pubDate><author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2018/05/20/create-instant-mysql-by-docker/</guid>
      <description>&lt;p&gt;データベースの勉強をしている。&lt;br&gt;&#xA;クエリを書く練習をしたりするにはやはり実際に動いている環境がほしい。&lt;br&gt;&#xA;ただ、ローカルの開発用のデータベースとは別でやりたいとか、使い捨ての環境が欲しくなるときがある。&lt;br&gt;&#xA;そんなときはDockerを利用することで使い捨ての環境を用意できる。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
