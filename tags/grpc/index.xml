<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grpc on My External Storage</title>
    <link>https://budougumi0617.github.io/tags/grpc/</link>
    <description>Recent content in Grpc on My External Storage</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 03 Feb 2018 14:52:19 +0900</lastBuildDate>
    <atom:link href="https://budougumi0617.github.io/tags/grpc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Go]gRPC GatewayでgRPCに対するREST APIを自動生成する</title>
      <link>https://budougumi0617.github.io/2018/02/03/grpc-gateway-for-rest-api/</link>
      <pubDate>Sat, 03 Feb 2018 14:52:19 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2018/02/03/grpc-gateway-for-rest-api/</guid>
      <description>&lt;p&gt;gRPCで作ったAPIは通常REST APIからコールできない。&lt;br&gt;&#xA;&lt;code&gt;grpc-ecosystem/grpc-gateway&lt;/code&gt;を使うとgRPC APIに対するREST APIのリバースプロクシサーバのコードが自動生成出来る。&#xA;Protocol BufferにREST用の定義を追加して&lt;code&gt;grpc-ecosystem/grpc-gateway&lt;/code&gt;を試してみた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Go]gomockを使ったgRPCのテスト</title>
      <link>https://budougumi0617.github.io/2018/01/21/try-gomock-on-grpc-go/</link>
      <pubDate>Sun, 21 Jan 2018 19:21:28 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2018/01/21/try-gomock-on-grpc-go/</guid>
      <description>&lt;p&gt;gRPCの勉強というより、gomockの勉強と言ったほうが良いかもしれないが、&#xA;&lt;code&gt;protoc&lt;/code&gt;コマンドで生成した&lt;code&gt;gRPC&lt;/code&gt;コードをモックしてテストする方法を確かめた。&#xA;せっかくなので今回は自分でProtocol Bufferの定義からやった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Go]gRPC Basics: GoからgRPCのストリーミングRPCを理解する</title>
      <link>https://budougumi0617.github.io/2018/01/14/grpc-basics-go/</link>
      <pubDate>Sun, 14 Jan 2018 10:47:23 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2018/01/14/grpc-basics-go/</guid>
      <description>&lt;p&gt;gRPC-goのクイックスタート、サーバーレリフレクションを試したので、次はgRPC Basics: Goをやってみた。クイックスタートを終えているので、そちらで学習できている部分（環境構築手順、基本的な概念）には触れない。&#xA;クイックスタートでは出てこなかったStreaming RPCについてまとめた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Go][gRPC]Server Reflection Tutorialをやってみた</title>
      <link>https://budougumi0617.github.io/2018/01/04/server-reflection-tutorial/</link>
      <pubDate>Thu, 04 Jan 2018 08:54:30 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2018/01/04/server-reflection-tutorial/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://budougumi0617.github.io/2018/01/01/hello-grpc-go/&#34;&gt;前回&lt;/a&gt;のgRPCのクイックスタートをやったときにサーバーリフレクションのことがよくわからなかった。サーバーリフレクションにもチュートリアルがあったのでやってみた。&lt;/p&gt;&#xA;&lt;h1 id=&#34;tldr&#34;&gt;TL;DR&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;サーバーリフレクションを使うと実行中のサーバからプロトコルバッファーの定義を取得したり、実行出来るようになる。&lt;/li&gt;&#xA;&lt;li&gt;Goで利用するには、&lt;code&gt;grpc.NewServer()&lt;/code&gt;のあとで通常のプロトコルバッファーの&lt;code&gt;Register&lt;/code&gt;をした後&lt;code&gt;reflection.Register&lt;/code&gt;メソッドを呼ぶだけ&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://github.com/grpc/grpc-go/blob/master/Documentation/server-reflection-tutorial.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;チュートリアル&lt;/a&gt;の手順通りに行うとc++のクライアントからサーバのプロトコルバッファーを確認することができる。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;server-reflectionとは&#34;&gt;Server Reflectionとは&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;GRPC Server Reflection Protocol&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&lt;a href=&#34;https://github.com/grpc/grpc/blob/master/doc/server-reflection.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/grpc/grpc/blob/master/doc/server-reflection.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Go]gRPCのGo Quick Startをやってみた。</title>
      <link>https://budougumi0617.github.io/2018/01/01/hello-grpc-go/</link>
      <pubDate>Mon, 01 Jan 2018 17:30:50 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2018/01/01/hello-grpc-go/</guid>
      <description>&lt;p&gt;gRPCについて理解を始めるため、gRPCのクイックスタートをやったのでメモしておく。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Go Quick Start&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&lt;a href=&#34;https://grpc.io/docs/quickstart/go.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://grpc.io/docs/quickstart/go.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ちなみに今回行ったのは、&lt;code&gt;Go&lt;/code&gt;のクイックスタートだが、公式には以下の言語のクイックスタートが用意されている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Conference 2017 Autumn参加メモ #gocon</title>
      <link>https://budougumi0617.github.io/2017/11/09/gocon2017-autumn/</link>
      <pubDate>Thu, 09 Nov 2017 01:27:48 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2017/11/09/gocon2017-autumn/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;URL&lt;/td&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://gocon.connpass.com/event/66615/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gocon.connpass.com/event/66615/&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;会場&lt;/td&gt;&#xA;          &lt;td&gt;株式会社メルカリ&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;日時&lt;/td&gt;&#xA;          &lt;td&gt;2017/11/05(日) 09:00 〜 17:30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;toggeter&lt;/td&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://togetter.com/li/1168291&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://togetter.com/li/1168291&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;&#xA;&lt;p&gt;自分は&#xA;&lt;a href=&#34;http://www.gopl.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gopl&lt;/a&gt;の練習問題や簡単なツールしかGoで作ったことがないので、サービス・アプリケーション構築におけるGoのプラクティスや利用OSSの知見を聞くことが出来て非常に良かった。聞いたOSS、サービスのリソースはだいたい探せたので、復習がてらひとつずつ確認しておきたい。&#xA;また、多くの発表者の方がスライドを英語で書かれており、英語弱者の自分としては必要なのは「プログラミング言語」だけではないなと痛感した。&#xA;贅沢にもおみやげにGopher Tシャツまで頂いた。Googleさん、Mercariさん、運営のみなさま、Gopherのみなさまありがとうございました。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
