<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debug on My External Storage</title>
    <link>https://budougumi0617.github.io/tags/debug/</link>
    <description>Recent content in Debug on My External Storage</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 08 Apr 2018 09:12:28 +0900</lastBuildDate>
    <atom:link href="https://budougumi0617.github.io/tags/debug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Goのデバッガ(Delve)のいろいろな起動のしかた(引数を渡して起動、起動中のプロセスにアタッチして起動 etc...)</title>
      <link>https://budougumi0617.github.io/2018/04/08/debug-by-delve/</link>
      <pubDate>Sun, 08 Apr 2018 09:12:28 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2018/04/08/debug-by-delve/</guid>
      <description>&lt;p&gt;goでデバッグするときはdelveを使うことが多いと思う。&#xA;ユースケース別の起動方法をまとめた。&lt;/p&gt;&#xA;&lt;h1 id=&#34;tldr&#34;&gt;TL;DR&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基本的な起動方法と簡単な操作方法(&lt;code&gt;dlv debug&lt;/code&gt;/&lt;code&gt;dlv test&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;環境変数を設定して起動する(Windows以外)(&lt;code&gt;ENV=... dlv debug&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;引数を渡して起動する(&lt;code&gt;dlv debug --&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;特定のテストケースを指定して起動する(&lt;code&gt;dlv test -- -test.run&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;起動済みのプロセスにアタッチして起動する(&lt;code&gt;dlv attach&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;リモートから接続して起動する(&lt;code&gt;dlv exec&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;dlv connect&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;&#xA;&lt;p&gt;まずはvimを起動する。(&#xA;&lt;a href=&#34;https://github.com/fatih/vim-go/blob/master/CHANGELOG.md#117---march-27-2018&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;vim-go&lt;/code&gt;も&lt;code&gt;delve&lt;/code&gt;をサポート&lt;/a&gt;するようになりましたね。)&lt;br&gt;&#xA;…ではこの記事が閉じられそうなのでコマンドラインからDelveを使うことを前提とする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Go]MacのVSCodeでGoのデバッグを試すと&#34;unexpected fault address...&#34;エラーになる</title>
      <link>https://budougumi0617.github.io/2017/12/24/activate-delve-on-mac/</link>
      <pubDate>Sun, 24 Dec 2017 13:11:28 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2017/12/24/activate-delve-on-mac/</guid>
      <description>&lt;p&gt;Macの&lt;code&gt;Visual Studio Code&lt;/code&gt;(以下&lt;code&gt;VSCode&lt;/code&gt;)を使って&lt;code&gt;Go&lt;/code&gt;のコードの中で&lt;code&gt;Syscall&lt;/code&gt;が呼ばれるまでをデバッグで確認したかったが、ステップインを使うと、&lt;code&gt;unexpected fault address...&lt;/code&gt;で失敗していた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker-compose上のRailsのデバッグを行う</title>
      <link>https://budougumi0617.github.io/2017/09/02/debug-rails-on-docker/</link>
      <pubDate>Sat, 02 Sep 2017 12:16:06 +0900</pubDate>
      <guid>https://budougumi0617.github.io/2017/09/02/debug-rails-on-docker/</guid>
      <description>&lt;p&gt;Rails本の写経を&lt;code&gt;docker-compose&lt;/code&gt;で行なったときのTips。&lt;/p&gt;&#xA;&lt;h1 id=&#34;tldr&#34;&gt;TL;DR&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;docker-compose&lt;/code&gt;で作ったRubyOnRailsコンテナで&lt;code&gt;binding.pry&lt;/code&gt;によるデバッグを行えるようにする。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
